pipeline {
    agent any
    
    environment {
        SONARQUBE_URL = 'http://4.154.33.176:9000/'
        JFROG_ARTIFACTORY_URL = 'http://20.213.95.76:8082/'
        MAVEN_HOME = tool 'Maven'
        SONARQUBE_TOKEN = credentials('SONARQUBE_TOKEN') 
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url:'https://github.com/naseebjanc/b7-java.git']]])
            }
        }

        stage('Build') {
            steps {
                script {
                    def mavenCmd = "${MAVEN_HOME}/bin/mvn"
                    sh "${mavenCmd} clean install"
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                script {
                    def scannerHome = tool 'SonarQubeScanner'
                    def mavenCmd = "${MAVEN_HOME}/bin/mvn"
                    def sonarScannerCmd = "${scannerHome}/bin/sonar-scanner"
                    try {
                        withSonarQubeEnv('sonarqube') {
                            sh "${mavenCmd} sonar:sonar -Dsonar.login='${SONARQUBE_TOKEN}'"
                        }
                    } finally {
                        sh """${sonarScannerCmd} -Dsonar.login='${SONARQUBE_TOKEN}'"""
                    }
                }
            }
        }

        stage('Deploy to Artifactory') {
            steps {
                script {
                    def rtMaven = tool 'Artifactory-Maven'
                    def mavenCmd = "${rtMaven}/bin/mvn"
                    def deployCmd = "${mavenCmd} deploy -Dmaven.test.skip=true"

                    sh "${deployCmd}"
                }
            }
        }
    }
}
